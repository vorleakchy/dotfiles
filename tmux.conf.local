# Turn on mouse
set -g mouse on

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Address clipboard failure in tmux + vim
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Escape
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"\; send -X cancel

# Simplify status bar display.
set -g status-left ' #S ‚ùê '
set -g status-left-length 50
set -g status-bg default
set -g status-attr bright
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-fg colour166
# `is-online` see: https://github.com/sindresorhus/is-online-cli
# More useful status-right with online status, battery percentage and nicely formated datetime
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(battery -p -t -g default)  #(date '+%a, %b %d - %I:%M') "

# Make C-j display a selectable list of sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Join pane from another window
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Quick session switching back and forth. Default mapping for Space
bind-key Space switch-client -l

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# Edit dotfiles-local in side pane
bind C-d split-window -h -c ~/dev/dotfiles-local/ "reattach-to-user-namespace $EDITOR +Files"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Secondary binding for C-l to retain redraw
bind C-l send-keys 'C-l'

# Easy resizing of panes with fine and coarse adjustment
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 2

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Run rcup
bind r split-window -h -c ~/ "rcup"

# Show gitsh in side pane
bind g split-window -c "#{pane_current_path}" -h -p 50 'gitsh'

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Break a pane out to a new window
bind-key b break-pane -d

# Run tat from current folder and enter that session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill current session and go to next session
bind-key ! run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

